from ymaps import Geocode
from math import sin, cos, sqrt, atan2, radians

client = Geocode("your_code")

data_metro = """(1, 'Гостиный Двор', 59.933933, 30.333736, 1321827690, 0, 1);
(2, 'Площадь Восстания', 59.931519, 30.360550, 1321827719, 0, 1);
(3, 'Невский Проспект', 59.935421, 30.327044, 1321827719, 0, 1);
(4, 'Владимирская', 59.927464, 30.348154, 1321827719, 0, 1);
(5, 'Маяковская', 59.931423, 30.355179, 1321827719, 0, 1);
(6, 'Достоевская', 59.928181, 30.346195, 1321827719, 0, 1);
(7, 'Сенная Площадь', 59.926968, 30.320440, 1321827719, 0, 1);
(8, 'Звенигородская', 59.922279, 30.335623, 1321827719, 0, 1);
(9, 'Спасская', 59.926483, 30.319866, 1321827719, 0, 1);
(10, 'Садовая', 59.926121, 30.317638, 1321827719, 0, 1);
(11, 'Пушкинская', 59.920609, 30.329865, 1321827720, 0, 1);
(12, 'Чернышевская', 59.944431, 30.359966, 1321827720, 0, 1);
(13, 'Лиговский Проспект', 59.920738, 30.355160, 1321827720, 0, 1);
(14, 'Обводный Канал', 59.914577, 30.349636, 1321827720, 0, 1);
(15, 'Технологический Институт', 59.916435, 30.318779, 1321827720, 0, 1);
(16, 'Площадь Ленина', 59.955616, 30.356041, 1321827720, 0, 1);
(17, 'Горьковская', 59.956051, 30.318895, 1321827720, 0, 1);
(18, 'Площадь Александра Невского II', 59.923557, 30.383411, 1321827720, 0, 1);
(19, 'Площадь Александра Невского I', 59.924248, 30.385300, 1321827720, 0, 1);
(20, 'Фрунзенская', 59.906174, 30.317520, 1321827720, 0, 1);
(21, 'Спортивная', 59.951767, 30.290680, 1321827720, 0, 1);
(22, 'Балтийская', 59.907150, 30.299545, 1321827720, 0, 1);
(23, 'Петроградская', 59.966393, 30.311502, 1321827721, 0, 1);
(24, 'Чкаловская', 59.961136, 30.292019, 1321827721, 0, 1);
(25, 'Выборгская', 59.970928, 30.347408, 1321827721, 0, 1);
(26, 'Волковская', 59.895966, 30.358017, 1321827721, 0, 1);
(27, 'Московские Ворота', 59.891487, 30.317961, 1321827721, 0, 1);
(28, 'Крестовский Остров', 59.971703, 30.259462, 1321827737, 0, 1);
(29, 'Старая Деревня', 59.989235, 30.255159, 1321827737, 0, 1);
(30, 'Чёрная Речка', 59.985371, 30.300894, 1321827737, 0, 1);
(31, 'Пионерская', 60.002422, 30.296608, 1321827737, 0, 1);
(32, 'Василеостровская', 59.942520, 30.278265, 1321827737, 0, 1);
(33, 'Комендантский Проспект', 60.008423, 30.259068, 1321827738, 0, 1);
(34, 'Удельная', 60.016609, 30.315805, 1321827738, 0, 1);
(35, 'Озерки', 60.037025, 30.321733, 1321827739, 0, 1);
(36, 'Парнас', 60.066849, 30.333979, 1321827741, 0, 1);
(37, 'Проспект Просвещения', 60.051365, 30.332424, 1321827741, 0, 1);
(38, 'Гражданский Проспект', 60.034863, 30.418213, 1321827742, 0, 1);
(39, 'Девяткино', 60.050179, 30.442844, 1321827742, 0, 1);
(40, 'Площадь Мужества', 59.999966, 30.366362, 1321827749, 0, 1);
(41, 'Академическая', 60.012691, 30.396008, 1321827749, 0, 1);
(42, 'Политехническая', 60.008839, 30.370846, 1321827749, 0, 1);
(43, 'Ладожская', 59.932373, 30.439342, 1321827750, 0, 1);
(44, 'Новочеркасская', 59.928894, 30.411924, 1321827750, 0, 1);
(45, 'Улица Дыбенко', 59.907330, 30.483404, 1321827751, 0, 1);
(46, 'Проспект Большевиков', 59.919769, 30.466829, 1321827751, 0, 1);
(47, 'Елизаровская', 59.896645, 30.423775, 1321827753, 0, 1);
(48, 'Ломоносовская', 59.877254, 30.441813, 1321827754, 0, 1);
(49, 'Пролетарская', 59.865124, 30.470316, 1321827754, 0, 1);
(50, 'Обухово', 59.848610, 30.457802, 1321827755, 0, 1);
(51, 'Купчино', 59.829323, 30.375587, 1321827756, 0, 1);
(52, 'Рыбацкое', 59.830830, 30.500427, 1321827756, 0, 1);
(53, 'Звёздная', 59.833126, 30.349428, 1321827764, 0, 1);
(54, 'Московская', 59.848873, 30.321465, 1321827765, 0, 1);
(55, 'Парк Победы', 59.866268, 30.321886, 1321827765, 0, 1);
(56, 'Электросила', 59.879105, 30.318707, 1321827765, 0, 1);
(57, 'Проспект Ветеранов', 59.842106, 30.250587, 1321827769, 0, 1);
(58, 'Ленинский Проспект', 59.851768, 30.268419, 1321827769, 0, 1);
(59, 'Автово', 59.867214, 30.261421, 1321827769, 0, 1);
(60, 'Кировский Завод', 59.879635, 30.261959, 1321827770, 0, 1);
(61, 'Нарвская', 59.901112, 30.274986, 1321827777, 0, 1);
(62, 'Приморская', 59.948456, 30.234625, 1321827778, 0, 1);
(63, 'Лесная', 59.984718, 30.344229, 1321827789, 0, 1);"""


async def get_distance(address):
    data = {}

    address = client.geocode(f"{address}")

    for _ in address["response"]["GeoObjectCollection"]["featureMember"]:
        code = _["GeoObject"]["Point"]["pos"]
        code = str(code).split()
        address_code = [code[1], code[0]]

    address2_code1 = float(address_code[0])
    address2_code2 = float(address_code[1])

    for i in data_metro.split("\n"):
        name_stations = i.split(",")[1].replace("'", "")
        code_1 = i.split(",")[2]
        code_2 = i.split(",")[3]

        r = 6373.0

        lat1 = radians(address2_code1)
        lon1 = radians(address2_code2)
        lat2 = radians(float(code_1))
        lon2 = radians(float(code_2))

        dlon = lon2 - lon1
        dlat = lat2 - lat1

        a = sin(dlat / 2) ** 2 + cos(lat1) * cos(lat2) * sin(dlon / 2) ** 2
        c = 2 * atan2(sqrt(a), sqrt(1 - a))

        distance = r * c

        value = distance
        data[name_stations] = value

    name_min_distance = min(data, key=data.get)
    min_distance = data.get(name_min_distance)
    return [name_min_distance, min_distance]
